UserEntity {
  createdAt: 2023-11-11T16:40:52.436Z,
  updatedAt: 2023-11-11T17:37:34.059Z,
  id: '9d1520eb-7030-4c70-907c-5ab07d2b7bb5',
  userName: 'cosmosupdate3',
  login: 'cosmos3',
  password: '$2b$05$6IzSbymmbkTih6bgi6aAeuu7Yv4cX.Y3qswNGpBkZX5h6XnZbZJDG',
  email: 'co5784@ukr.net',
  role: 'buyer',
  accountType: 'Premium',
  phone: '+380977454521'
}
publ.repository SelectQueryBuilder {
  '@instanceof': Symbol(SelectQueryBuilder),
  parameterIndex: 0,
  connection: <ref *1> DataSource {
    '@instanceof': Symbol(DataSource),
    migrations: [],
    subscribers: [],
    entityMetadatas: [
      [EntityMetadata],
      [EntityMetadata],
      [EntityMetadata],
      [EntityMetadata]
    ],
    entityMetadatasMap: Map(4) {
      [class AutoSalonEntity extends CreatedUpdatedModel] => [EntityMetadata],
      [class ImageEntity extends CreatedUpdatedModel] => [EntityMetadata],
      [class PublicationEntity extends CreatedUpdatedModel] => [EntityMetadata],
      [class UserEntity extends CreatedUpdatedModel] => [EntityMetadata]
    },
    name: 'default',
    options: {
      type: 'postgres',
      host: '0.0.0.0',
      port: '5432',
      username: 'user',
      password: 'pass',
      database: 'autoRia-clone',
      synchronize: true,
      migrationsRun: false,
      entities: [Array]
    },
    logger: AdvancedConsoleLogger { options: undefined },
    driver: PostgresDriver {
      slaves: [],
      connectedQueryRunners: [],
      isReplicated: false,
      treeSupport: true,
      transactionSupport: 'nested',
      supportedDataTypes: [Array],
      supportedUpsertTypes: [Array],
      spatialTypes: [Array],
      withLengthColumnTypes: [Array],
      withPrecisionColumnTypes: [Array],
      withScaleColumnTypes: [Array],
      mappedDataTypes: [Object],
      dataTypeDefaults: [Object],
      maxAliasLength: 63,
      isGeneratedColumnsSupported: true,
      cteCapabilities: [Object],
      connection: [Circular *1],
      options: [Object],
      postgres: [PG],
      database: 'autoRia-clone',
      schema: 'public',
      master: [BoundPool],
      searchSchema: 'public',
      version: '16.0'
    },
    manager: EntityManager {
      '@instanceof': Symbol(EntityManager),
      repositories: [Map],
      treeRepositories: [],
      plainObjectToEntityTransformer: PlainObjectToNewEntityTransformer {},
      connection: [Circular *1]
    },
    namingStrategy: DefaultNamingStrategy {
      nestedSetColumnNames: [Object],
      materializedPathColumnName: 'mpath'
    },
    metadataTableName: 'typeorm_metadata',
    queryResultCache: undefined,
    relationLoader: RelationLoader { connection: [Circular *1] },
    relationIdLoader: RelationIdLoader {
      connection: [Circular *1],
      queryRunner: undefined
    },
    isInitialized: true
  },
  queryRunner: undefined,
  expressionMap: QueryExpressionMap {
    connection: <ref *1> DataSource {
      '@instanceof': Symbol(DataSource),
      migrations: [],
      subscribers: [],
      entityMetadatas: [Array],
      entityMetadatasMap: [Map],
      name: 'default',
      options: [Object],
      logger: [AdvancedConsoleLogger],
      driver: [PostgresDriver],
      manager: [EntityManager],
      namingStrategy: [DefaultNamingStrategy],
      metadataTableName: 'typeorm_metadata',
      queryResultCache: undefined,
      relationLoader: [RelationLoader],
      relationIdLoader: [RelationIdLoader],
      isInitialized: true
    },
    relationLoadStrategy: 'join',
    queryEntity: false,
    aliases: [ [Alias] ],
    queryType: 'select',
    selects: [ [Object] ],
    maxExecutionTime: 0,
    selectDistinct: false,
    selectDistinctOn: [],
    extraReturningColumns: [],
    onConflict: '',
    onIgnore: false,
    joinAttributes: [],
    relationIdAttributes: [],
    relationCountAttributes: [],
    wheres: [],
    havings: [],
    orderBys: {},
    groupBys: [],
    withDeleted: false,
    parameters: {},
    disableEscaping: true,
    enableRelationIdValues: false,
    extraAppendedAndWhereCondition: '',
    subQuery: false,
    aliasNamePrefixingEnabled: true,
    cache: false,
    options: [],
    insertColumns: [],
    whereEntities: [],
    updateEntity: true,
    callListeners: true,
    useTransaction: false,
    nativeParameters: {},
    locallyGenerated: {},
    commonTableExpressions: [],
    timeTravel: false,
    mainAlias: Alias {
      type: 'from',
      name: 'publications',
      _metadata: [EntityMetadata],
      tablePath: 'publications'
    }
  },
  findOptions: {},
  selects: [],
  joins: [],
  conditions: '',
  orderBys: [],
  relationMetadatas: []
}